global class PushLeadsToSquadIQQueuable implements Queueable{
    private String jsonBody;
    private String LeadID;
    Private String SquadIQConfigRecID;
    global PushLeadsToSquadIQQueuable(String jsonBody,String LeadID,String SquadIQConfigRecID) {
        this.jsonBody = jsonBody;
        this.LeadID = LeadID;
        this.SquadIQConfigRecID = SquadIQConfigRecID;
    }
    global void execute(QueueableContext QC) {
        if(String.isNotBlank(jsonBody) && String.isNotBlank(LeadID) && String.isNotBlank(SquadIQConfigRecID)){
            callSquadIQFuture(jsonBody,LeadID,SquadIQConfigRecID);
        }
    }
    @future(callout=true)
    public static void callSquadIQFuture(String jsonBody,String LeadID,String SquadIQConfigRecID){
        if(String.isNotBlank(jsonBody) && String.isNotBlank(LeadID) && String.isNotBlank(SquadIQConfigRecID)){
            calloutToSquadIQAPI(jsonBody,LeadID,SquadIQConfigRecID);
        }
    }
    Public Static void calloutToSquadIQAPI(String jsonBody,String LeadID,String SquadIQConfigRecID){
        Boolean isSuccessfullyPushedTOSquadIQ = false;
        try{
            if(String.isNotBlank(jsonBody) && String.isNotBlank(LeadID) && String.isNotBlank(SquadIQConfigRecID)){
                Map<String,Integration_Setting__c> allEndPoint = Integration_Setting__c.getAll();
                Integration_Setting__c integrationDetail = allEndPoint.get('SquadIQ_API');
                String endPointUrl = integrationDetail.End_Point__c+integrationDetail.Client_Id__c+'/';
                Http http = new Http();
                HttpRequest request = new HttpRequest();
                Httpresponse response = new Httpresponse();
                
                request.setMethod('POST');
                request.setBody(jsonBody);
                request.setHeader('Content-Type', integrationDetail.ContentType__c);
                //request.setHeader('Accept', contentType);
                request.setHeader('Authorization',integrationDetail.Authorization__c);
                request.setEndPoint(endPointUrl);
                
                System.debug('request: '+request);
                System.debug('request body: '+jsonBody);
                System.debug('Authorization'+integrationDetail.Authorization__c);
                response = http.send(request);
                System.debug('response: '+response);
                
                String resJson;
                if(response.getStatusCode()==201){
                    isSuccessfullyPushedTOSquadIQ = true;
                    resJson = response.getBody();
                    System.debug('response.getStatusCode(): '+response.getStatusCode());
                    System.debug('resJson: '+resJson);
                    //Map<String,Object> respWrap = new Map<String,Object>();
                    //respWrap = (Map<String,Object>)JSON.deserializeUntyped(resJson);
                    List<Object> respWrap = new List<Object>();
                    respWrap = (List<Object>)JSON.deserializeUntyped(resJson);
                    System.debug('respWrap: '+respWrap);
                }
                else{
                    System.debug('response.getStatusCode(): '+response.getStatusCode());
                    Logger.log('Error','PushLeadsToSquadIQQueuable class','calloutToSquadIQAPI method','Status code error',String.ValueOf(response.getStatusCode()),LeadID);
                }
            }
        }
        catch(Exception e){
            system.debug('Exception : '+e.getStackTraceString());
            system.debug('Exception Message : '+e.getMessage());
            Logger.log('Exception','PushLeadsToSquadIQQueuable class','calloutToSquadIQAPI method',e.getMessage(),e.getStackTraceString(),LeadID);
        }
        Lead leadToUpdate = new Lead();
        leadToUpdate.id=LeadID;
     
        if(isSuccessfullyPushedTOSquadIQ){
            leadToUpdate.Squad_IQ_Status__c ='Sent to SquadIQ';
            Lead_Class_Scoring__c SquadIQConfigRecord;
            SquadIQConfigRecord = [Select id,SquadIQ_Cities__c,SquadIQ_SignUp_Sources__c,SquadIQ_Total_Leads_Assigned__c,SquadIQ_Total_Leads_Limit__c,Squad_IQ_Daily_Leads_Assigned__c,Squad_IQ_daily_Leads_Limit__c from Lead_Class_Scoring__c where id =:SquadIQConfigRecID limit 1];
            
            if(SquadIQConfigRecord !=Null){
                if(SquadIQConfigRecord.SquadIQ_Total_Leads_Assigned__c == Null || SquadIQConfigRecord.SquadIQ_Total_Leads_Assigned__c==0){
                    SquadIQConfigRecord.SquadIQ_Total_Leads_Assigned__c = 1;
                }
                else{
                    SquadIQConfigRecord.SquadIQ_Total_Leads_Assigned__c +=1;
                }
                if(SquadIQConfigRecord.Squad_IQ_Daily_Leads_Assigned__c == Null || SquadIQConfigRecord.Squad_IQ_Daily_Leads_Assigned__c==0){
                    SquadIQConfigRecord.Squad_IQ_Daily_Leads_Assigned__c = 1;
                }
                else{
                    SquadIQConfigRecord.Squad_IQ_Daily_Leads_Assigned__c +=1;
                }
                update SquadIQConfigRecord;
            }
        }
        else{
            leadToUpdate.Squad_IQ_Status__c ='Failed Sending to SquadIQ';
        }
        update leadToUpdate;
        System.debug('leadToUpdate: '+leadToUpdate);
    }
    
   public static void dummyTestCover(){
        Integer i =0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
       i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
    
}